#!/usr/bin/env zsh
## Use zsh so can use bash-isms
## Feed this script a link and it will give rofi a list of link_handlers to open with

url="$1"
title="$2"
description="$3"
feed_title="$4"

if [[ "$url" == *"i.redd"* || "$url" == *"imgur"* ]]; then
    wget --output-document /tmp/feh "$url"
    convert /tmp/feh -background black -fill white -font Source-Code-Pro-Bold -pointsize 35 label:"$title" -gravity Center -append /tmp/feh_title
    feh --scale-down --recursive /tmp/feh_title && /bin/rm /tmp/feh /tmp/feh_title
    disown
elif [[ "$url" == *"v.red"* || "$url" == *"streama"* ]]; then
    mpv "$url"
    disown
else
    # The URL will be shown visually in 30 characters or less.
    if [[ "${#url}" -gt 30 ]];
    then
        visual="${url:0:20}"..."${url: -7}"
    else
        visual="$url"
    fi
    echo $visual

    # List of link handlers to open files
    link_handlers=$(printf "\
umpv\n\
umpv_audio\n\
mpv\n\
bookmark\n\
firefox\n\
feh\n\
paragraph\n\
summary\n\
ytdl\n\
speedread\n\
speedread_summary"\
            | rofi -matching fuzzy -dmenu -i -mesg "How should I open '$visual'?" -select
    )

    echo "$link_handlers"

    case "$link_handlers" in
        umpv) umpv "$url" & disown ;;
        umpv_audio) "$HOME/git/scripts/python/umpv_audio" "$url" & disown ;;
        mpv) mpv "$url" 2>/dev/null & disown ;;
        bookmark) buku --add "$url" toread,"$feed_title" --title "$title" & disown ;;
        firefox) firefox "$url" ;;
        feh) wget --output-document /tmp/feh "$url" && convert /tmp/feh -background black -fill white -font Source-Code-Pro-Bold -pointsize 35 label:"$title" -gravity Center -append /tmp/feh_title && feh --scale-down --recursive /tmp/feh_title && /bin/rm /tmp/feh /tmp/feh_title ;;
        paragraph) /bin/rm /tmp/para.txt; "$HOME/git/scripts/python/paragraphscraper/paragraph_scraper.py" --url "$url" && alacritty --hold -e bat /tmp/para.txt ;;
        summary) /bin/rm /tmp/para.txt; "$HOME/git/scripts/python/paragraphscraper/paragraph_scraper.py" --url "$url" && "$HOME/git/scripts/python/paragraphscraper/article_summarise_cosine.py" --file-name /tmp/para.txt --context > /tmp/summary.txt && alacritty --hold -e bat /tmp/summary.txt ;;
        ytdl) youtube-dl "$url" > /dev/null 2>&1 & ;;
        speedread) /bin/rm /tmp/para.txt; "$HOME/git/scripts/python/paragraphscraper/paragraph_scraper.py" --url "$url" && alacrity --hold -e /usr/bin/speedread -w 350 /tmp/para.txt ;;
        speedread_summary) /bin/rm /tmp/para.txt; "$HOME/git/scripts/python/paragraphscraper/paragraph_scraper.py" --url "$url" && "$HOME/git/scripts/python/paragraphscraper/article_summarise_cosine.py" --file-name /tmp/para.txt --context > /tmp_summary.txt && alacritty --hold -e /usr/bin/speedread -w 350 /tmp/summary.txt ;;
    esac
fi

exit 0
